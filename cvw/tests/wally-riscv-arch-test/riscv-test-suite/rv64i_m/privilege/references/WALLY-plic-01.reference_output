00000000 # read empty MIP (1.0.0)
00000000
00000008 # check GPIO interrupt pending on intPending0
00000000
00000000 # Claim gives no interrupt due to zero priority
00000000
00000008 # interrupt still pending due to no claim
00000000
00000000 # check no interrupts pending
00000000
00000800 # MEIP set due to PLIC priority (1.0.1) 
00000000
00000008 # check GPIO interrupt pending on intPending0
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending
00000000
00000000 # check no interrupts pending
00000000
00000000 # read empty MIP (1.0.2)
00000000
00000000 # check GPIO interrupt pending on intPending0
00000000
00000000 # claim gives no interrupt due to no intPending
00000000
00000000 # no interrupts pending after clear
00000000
00000000 # still no interrupts after clear
00000000
00000000 # read empty MIP (1.1.0) 
00000000
00000008 # check GPIO interrupt pending on intPending0
00000000
00000003 # Claim gives 3 for ID of GPIO
00000000
00000000 # interrupt still pending due to no claim
00000000
00000000 # check no interrupts pending
00000000
00000800 # MEIP set due to PLIC priority (1.1.1) 
00000000
00000008 # check GPIO interrupt pending on intPending0
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending after claim
00000000
00000000 # check no interrupts pending
00000000
00000000 # read empty MIP (1.2.0) 
00000000
00000008 # check GPIO interrupt pending on intPending0
00000000
00000003 # Claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending after claim
00000000
00000000 # check no interrupts pending
00000000
00000800 # MEIP set due to PLIC priority (1.2.1) 
00000000
00000008 # check GPIO interrupt pending on intPending0
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending after claim
00000000
00000000 # check no interrupts pending
00000000
00000000 # read empty MIP (1.3.0) 
00000000
00000008 # check GPIO interrupt pending on intPending0
00000000
00000003 # Claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending after claim
00000000
00000000 # check no interrupts pending
00000000
00000800 # MEIP set due to PLIC priority (1.3.1) 
00000000
00000008 # check GPIO interrupt pending on intPending0
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending after claim
00000000
00000000 # check no interrupts pending
00000000
00000000 # read empty MIP (1.4.0) 
00000000
00000008 # check GPIO interrupt pending on intPending0
00000000
00000003 # Claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending after claim
00000000
00000000 # check no interrupts pending
00000000
00000800 # MEIP set due to PLIC priority (1.4.1) 
00000000
00000008 # check GPIO interrupt pending on intPending0
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending after claim
00000000
00000000 # check no interrupts pending
00000000
00000000 # read empty MIP (1.5.0) 
00000000
00000008 # check GPIO interrupt pending on intPending0
00000000
00000003 # Claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending after claim
00000000
00000000 # check no interrupts pending
00000000
00000800 # MEIP set due to PLIC priority (1.5.1) 
00000000
00000008 # check GPIO interrupt pending on intPending0
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending after claim
00000000
00000000 # check no interrupts pending
00000000
00000000 # read empty MIP (1.6.0) 
00000000
00000008 # check GPIO interrupt pending on intPending0
00000000
00000003 # Claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending after claim
00000000
00000000 # check no interrupts pending
00000000
00000800 # MEIP set due to PLIC priority (1.6.1) 
00000000
00000008 # check GPIO interrupt pending on intPending0
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending after claim
00000000
00000000 # check no interrupts pending
00000000
00000000 # read empty MIP (1.7.0) 
00000000
00000008 # check GPIO interrupt pending on intPending0
00000000
00000003 # Claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending after claim
00000000
00000000 # check no interrupts pending
00000000
00000800 # MEIP set (2.0)
00000000
00000408 # gpio and uart pending
00000000
00000003 # claim gpio
00000000
00000400 # gpio no longer pending
00000000
00000000 # no interrupts pending
00000000
00000800 # MEIP set (2.1)
00000000
00000408 # gpio and uart pending
00000000
00000003 # claim gpio
00000000
00000400 # gpio no longer pending
00000000
00000000 # no interrupts pending
00000000
00000800 # MEIP set (2.2)
00000000
00000408 # gpio and uart pending
00000000
0000000A # claim uart
00000000
00000008 # uart no longer pending
00000000
00000000 # no interrupts pending
00000000
00000800 # MEIP set (2.3)
00000000
00000408 # gpio and uart pending
00000000
0000000A # claim uart
00000000
00000008 # uart no longer pending
00000000
00000000 # no interrupts pending
00000000
00000000 # MEIP empty (2.4)
00000000
00000408 # gpio and uart pending
00000000
0000000A # claim none
00000000
00000008 # gpio and uart still pending
00000000
00000000 # no interrupts pending
00000000
00000A00 # MEIP and SEIP set (3.0)
00000000
00000408 # check GPIO and UART interrupt pending on intPending0
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000400 # check GPIO interrupt pending cleared after claim
00000000
00000000 # check no interrupts pending
00000000
00000200 # SEIP set (3.1)
00000000
00000408 # check GPIO and UART interrupt pending on intPending0
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000400 # check GPIO interrupt pending cleared after claim
00000000
00000000 # check no interrupts pending
00000000
00000200 # SEIP set (3.2)
00000000
00000408 # check GPIO and UART interrupt pending on intPending0
00000000
0000000A # claim UART
00000000
00000008 # GPIO interrupt pending after UART claimcomp
00000000
00000000 # check no interrupts pending
00000000
00000000 # read empty MIP (3.3)
00000000
00000408 # check GPIO and UART interrupt pending on intPending0
00000000
0000000A # claim UART
00000000
00000008 # check UART interrupt pending cleared after claim
00000000
00000000 # check no interrupts pending
00000000
00000A00 # MEIP and SEIP set (4.0)
00000000
00000400 # UART interrupt pending
00000000
0000000A # claim UART
00000000
00000000 # check no interrupts pending
00000000
00000000 # check no interrupts pending
00000000
00000200 # SEIP set (4.1)
00000000
00000400 # UART interrupt pending
00000000
00000000 # nothing in claim register
00000000
00000400 # UART interrupt pending
00000000
00000000 # check no interrupts pending
00000000
00000A00 # MEIP and SEIP set (4.2)
00000000
00000400 # UART interrupt pending
00000000
0000000A # claim UART
00000000
00000000 # check no interrupts pending
00000000
00000000 # check no interrupts pending
00000000
00000800 # MEIP set (4.3)
00000000
00000400 # UART interrupt pending
00000000
0000000A # claim UART
00000000
00000000 # check no interrupts pending
00000000
00000000 # check no interrupts pending
00000000
00000800 # MEIP set (4.4)
00000000
00000400 # UART interrupt pending
00000000
0000000A # claim UART
00000000
00000000 # check no interrupts pending
00000000
00000000 # check no interrupts pending
00000000
00000200 # SEIP set (4.5)
00000000
00000400 # UART interrupt pending
00000000
00000000 # nothing in claim register
00000000
00000400 # UART interrupt pending
00000000
00000000 # check no interrupts pending
00000000
00000000 # All disabled (4.6)
00000000
00000400 # UART interrupt pending
00000000
00000000 # nothing in claim register
00000000
00000400 # UART interrupt pending
00000000
00000000 # check no interrupts pending
00000000
00000200 # SEIP set (5.0)
00000000
00000008 # GPIO interrupt pending
00000000
00000000 # nothing in claim register
00000000
00000008 # GPIO interrupt pending
00000000
00000000 # check no interrupts pending
00000000
00000A00 # MEIP and SEIP set (5.1)
00000000
00000008 # GPIO interrupt pending
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending
00000000
00000000 # check no interrupts pending
00000000
00000800 # MEIP set (5.2)
00000000
00000008 # GPIO interrupt pending
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending
00000000
00000000 # check no interrupts pending
00000000
00000A00 # MEIP and SEIP set (5.3)
00000000
00000008 # GPIO interrupt pending
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending
00000000
00000000 # check no interrupts pending
00000000
00000800 # MEIP set (5.4)
00000000
00000008 # GPIO interrupt pending
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000000 # check no interrupts pending
00000000
00000000 # check no interrupts pending
00000000
00000200 # SEIP set (5.5)
00000000
00000008 # GPIO interrupt pending
00000000
00000000 # nothing in claim register
00000000
00000008 # GPIO interrupt pending
00000000
00000000 # check no interrupts pending
00000000
00000000 # read empty MIP (5.6)
00000000
00000008 # GPIO interrupt pending
00000000
00000000 # nothing in claim register
00000000
00000008 # GPIO interrupt pending
00000000
00000000 # check no interrupts pending
00000000
0000000b # written due to goto_s_mode
00000000
00000200 # read sip (7.0)
00000000
00000408 # check GPIO and UART interrupt pending on intPending0
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000400 # check GPIO interrupt pending cleared after claim
00000000
00000000 # check no interrupts pending
00000000
00000200 # read sip (7.1)
00000000
00000408 # check GPIO and UART interrupt pending on intPending0
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000400 # check GPIO interrupt pending cleared after claim
00000000
00000000 # check no interrupts pending
00000000
00000200 # read sip (7.2)
00000000
00000408 # check GPIO and UART interrupt pending on intPending0
00000000
0000000A # claim UART
00000000
00000008 # GPIO interrupt pending after UART claimcomp
00000000
00000000 # check no interrupts pending
00000000
00000200 # read sip (7.3)
00000000
00000408 # check GPIO and UART interrupt pending on intPending0
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000400 # check GPIO interrupt pending cleared after claim
00000000
00000000 # check no interrupts pending
00000000
00000000 # read sip (7.4)
00000000
00000408 # check GPIO and UART interrupt pending on intPending0
00000000
00000000 # nothing in claim register
00000000
00000408 # check GPIO and UART interrupt pending on intPending0
00000000
00000000 # check no interrupts pending
00000000
00000200 # read sip (7.5)
00000000
00000408 # check GPIO and UART interrupt pending on intPending0
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000400 # check GPIO interrupt pending cleared after claim
00000000
00000000 # check no interrupts pending
00000000
00000000 # read sip (7.6)
00000000
00000408 # check GPIO and UART interrupt pending on intPending0
00000000
00000000 # nothing in claim register
00000000
00000408 # check GPIO and UART interrupt pending on intPending0
00000000
00000000 # check no interrupts pending
00000000
00000009 # output from ecall in supervisor mode
00000000
00000800 # MEIP set (8.0)
00000000
00000408 # check GPIO and UART interrupt pending on intPending0
00000000
0000000A # claim UART
00000000
00000008 # GPIO interrupt pending after UART claimcomp
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000000 # read empty MIP                # no interrupts, meip is low
00000000
00000000 # check no interrupts pending
00000000
00000800 # MEIP set
00000000
00000008 # GPIO interrupt pending after complete
00000000
00000003 # claim gives 3 for ID of GPIO
00000000
00000000 # read empty MIP                # meip is zeroed
00000000
00000000 # check no interrupts pending
00000000
00000800 # MEIP set
00000000
00000400 # check GPIO interrupt pending cleared after claim
00000000
00000800 # MEIP set
00000000
00000408 # check GPIO and UART interrupt pending on intPending0
00000000
0000000A # claim UART
00000000
